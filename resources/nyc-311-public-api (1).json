{
    "openapi": "3.0.1",
    "info": {
        "title": "NYC 311 Public API",
        "description": "",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://api.nyc.gov/public"
        },
        {
            "url": "https://partner-api-backup.nyc.gov/public"
        },
        {
            "url": "https://partner-api.nyc.gov/public"
        }
    ],
    "paths": {
        "/api/GetCategory": {
            "get": {
                "summary": "/api/GetCategory/get",
                "description": "Use this service to retrieve all categories, and optionally sub-categories, of the NYC 311 contents.\n\nA category may have one or more sub-categories, which in turn may have one or more sub-categories. So, a category's hierarchy may have three (3) levels; it will not have more than three.\n\nIf a category or sub-category has no sub-categories, it is an end node, and has related knowledge base articles. To find these article's summaries, pass its `categoryId` into the `GetContentList` endpoint.",
                "operationId": "api-GetCategory-get",
                "parameters": [
                    {
                        "name": "max-level",
                        "in": "query",
                        "description": "Format - int64. (optional) The maximum number of category levels to return. Note that there are maximum of three (3) levels. Defaults to 2",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response is an array of `Category` objects.\n\nA category may have sub-categories, listed in the `SubCategory` property. Some sub-categories have sub-categories of their own (sub-sub-categories). In such cases, there will be three levels.\n\nThere will not be more than three levels of category; that is, a category's sub-sub-category will never have any sub-categories of its own.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    },
                                    "description": "GetCategory response 200 schema"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/GetSites": {
            "get": {
                "summary": "/api/GetSites/get",
                "description": "Returns Site details.  Use this service to get a single NYC public site data using its Site Name and Site Type. The Site name and type lookup API and/or list will be available in the future",
                "operationId": "api-GetSites-get",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success operation.\n\ntoday_id: date of status, YYYMMDD\n\ndetails: description of the status\n\nstatus: IN EFFECT, ON SCHEDULE, OPEN, PARTLY OPEN, NOT IN SESSION, SUSPENDED CLOSED\n\ntype: Type of status. Alternate Side Parking, Garbage and Recycling, School exceptionName: Explanation of why status is different than normal",
                        "content": {
                            "application/json": {
                                "example": {
                                    "Name": "SCHOOL PS10",
                                    "LastUpdatedDate": "2018-04-04T09:00:00.0000000+00:00",
                                    "WednesdayStartTime": "9",
                                    "WednesdayEndTime": "17",
                                    "TuesdayStartTime": "9",
                                    "TuesdayEndTime": "17",
                                    "ThursdayStartTime": "9",
                                    "ThursdayEndTime": "17",
                                    "SundayStartTime": "9",
                                    "SundayEndTime": "17",
                                    "StateCode": "9",
                                    "Type": "SCHOOL",
                                    "SiteRestriction": "Restriction",
                                    "ParentSite": "NYC Department of Education",
                                    "MondayStartTime": "9",
                                    "MondayEndTime": "17",
                                    "MainFaxNumber": "3242312121",
                                    "Longitude": 40.53543453,
                                    "Latitude": -65.12312312,
                                    "HolidayHoursException": "2022-09-13T12:00:00.0000000+00:00",
                                    "FridayStartTime": "9",
                                    "FridayEndTime": "17",
                                    "Fee": "300",
                                    "AfterHoursPhonenumber": "718123123",
                                    "Acronym": "DE",
                                    "Address": [
                                        {
                                            "StreetNumber": "2",
                                            "StreetName": "Metrotech",
                                            "Borough": "Brooklyn",
                                            "ZipCode": "11201",
                                            "City": "Brooklyn",
                                            "State": "NY"
                                        },
                                        {
                                            "StreetNumber": "110",
                                            "StreetName": "Myrtle Ave",
                                            "Borough": "Brooklyn",
                                            "ZipCode": "11201",
                                            "City": "Brooklyn",
                                            "State": "NY"
                                        }
                                    ],
                                    "Features": [
                                        {
                                            "Name": "Park",
                                            "ModifiedOn": "2018-04-04T09:00:00.0000000+00:00"
                                        },
                                        {
                                            "Name": "Pool",
                                            "ModifiedOn": "2018-04-04T09:00:00.0000000+00:00"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/GetServiceRequestList": {
            "post": {
                "summary": "/api/GetServiceRequestList/post",
                "description": "Use this service to get the latest status of a list of Service Request. The individual service request data structure within the list is the same as /GetServiceRequest/",
                "operationId": "api-GetServiceRequestList-post",
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "description": "",
                        "required": true,
                        "schema": {
                            "enum": [
                                "application/json"
                            ],
                            "type": "string"
                        },
                        "example": "application/json"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success operation.\nSRNumber: Service Request number\n\nAgency: New York City's Agency who handled the request\n\nProblem: Problem of the Service Request\n\nProblemDetails: Subcategories of the problem\n\nStatus:\n\n614110001: Open\n\n614110002: In Progress\n\n614110000: Cancel\n\n614110003: Closed\n\nDateTimeSubmitted: Time Stamp of Service Request\n\nAddress: address of the incident reported in the Service Request",
                        "content": {
                            "application/json": {
                                "example": {
                                    "SRNumbers": [
                                        "311-17323508",
                                        "311-17323514"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/GetCalendar": {
            "get": {
                "summary": "/api/GetCalendar/get",
                "description": "Returns calendar details.\n Use this service to retrieve NYCâ€™s School, Garbage and Parking status for a specific data or a data range. This service can only return maximum of 90 days of data if a range is requested.",
                "operationId": "api-GetCalendar-get",
                "parameters": [
                    {
                        "name": "fromdate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "todate",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success operation",
                        "content": {
                            "application/json": {
                                "example": {
                                    "days": [
                                        {
                                            "today_id": "20180704",
                                            "items": [
                                                {
                                                    "details": "Alternate side parking and meters in effect- Air Quality Health Advisory Notification issued 5/1/18 at 4:23 PM. The New York State Department of Environmental Conservation has issued an Air Quality.",
                                                    "status": "IN EFFECT",
                                                    "type": "Alternate Side Parking"
                                                },
                                                {
                                                    "details": "Garbage, recycling, and organics collections on schedule - Air Quality Health Advisory Notification issued 5/1/18 at 4:23 PM. The New York State Department of Environmental Conservation has issued an",
                                                    "status": "ON SCHEDULE",
                                                    "type": "Garbage and Recycling"
                                                },
                                                {
                                                    "exceptionName": "Independence Day",
                                                    "details": "School closed Independence Day",
                                                    "status": "CLOSED",
                                                    "type": "Schools"
                                                }
                                            ]
                                        },
                                        {
                                            "today_id": "20180705",
                                            "items": [
                                                {
                                                    "details": "Alternate side parking and meters in effect- Air Quality Health Advisory Notification issued 5/1/18 at 4:23 PM. The New York State Department of Environmental Conservation has issued an Air Quality.",
                                                    "status": "IN EFFECT",
                                                    "type": "Alternate Side Parking"
                                                },
                                                {
                                                    "details": "Garbage, recycling, and organics collections on schedule - Air Quality Health Advisory Notification issued 5/1/18 at 4:23 PM. The New York State Department of Environmental Conservation has issued an",
                                                    "status": "ON SCHEDULE",
                                                    "type": "Garbage and Recycling"
                                                },
                                                {
                                                    "details": "Public schools in session - Air Quality Health Advisory Notification issued 5/1/18 at 4:23 PM. The New York State Department of Environmental Conservation has issued an Air Quality Health Advisory for",
                                                    "status": "OPEN",
                                                    "type": "Schools"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "example": {
                                    "today_id": "date of status, YYYMMDD",
                                    "details": "description of the status",
                                    "status": "IN EFFECT, ON SCHEDULE, OPEN, PARTLY OPEN, NOT IN SESSION, SUSPENDED CLOSED",
                                    "type": "Type of status. Alternate Side Parking, Garbage and Recycling, Schools",
                                    "exceptionName": "Explanation of why status is different than normal"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/GetAssets": {
            "get": {
                "summary": "/api/GetAssets/get",
                "description": "Returns details of an asset. \n Use this service to get a single NYC public asset data using its Asset ID number\nThe Asset ID number API and/or list will be available in the future. ",
                "operationId": "api-GetAssets-get",
                "parameters": [
                    {
                        "name": "Assetnumber",
                        "in": "query",
                        "description": "Asset number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/GetServiceRequest": {
            "get": {
                "summary": "/api/GetServiceRequest/get",
                "description": "Returns service request details. Use this service to get the latest status of a Service Request by using the Service Request number. All data that has no privacy concern are retrievable.",
                "operationId": "api-GetServiceRequest-get",
                "parameters": [
                    {
                        "name": "srnumber",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success operation",
                        "content": {
                            "application/json": {
                                "example": ""
                            }
                        }
                    }
                }
            }
        },
        "/api/GetContent": {
            "get": {
                "summary": "/api/GetContent/get",
                "description": "Returns content details",
                "operationId": "api-GetContent-get",
                "parameters": [
                    {
                        "name": "SearchText",
                        "in": "query",
                        "description": "The identifier that uniquely identifies the content item being sought",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success operation"
                    }
                }
            }
        },
        "/api/Status/FireHydrant": {
            "get": {
                "summary": "/api/Status/FireHydrant",
                "description": "API to determine if Fire Hydrant emergency is currently active",
                "operationId": "api-getfirehydrantstatus-get",
                "responses": {
                    "200": {
                        "description": "Success operation"
                    }
                }
            }
        },
        "/api/Status/CodeBlue": {
            "get": {
                "summary": "/api/Status/CodeBlue",
                "description": "API to determine if Code Blue status is currently active",
                "operationId": "api-getcodebluestatus-get",
                "responses": {
                    "200": {
                        "description": "Success operation"
                    }
                }
            }
        },
        "/api/Status/SnowOnStreet": {
            "get": {
                "summary": "/api/Status/SnowOnStreet",
                "description": "API to determine if Snow or Ice on Street emergency is currently active",
                "operationId": "api-getsnowonstreetstatus-get",
                "responses": {
                    "200": {
                        "description": "Success operation"
                    }
                }
            }
        },
        "/api/Status/SnowOnSidewalk": {
            "get": {
                "summary": "/api/Status/SnowOnSidewalk",
                "description": "API to determine if Snow or Ice on Sidewalk emergency is currently active",
                "operationId": "api-getsnowonsidewalkstatus-get",
                "responses": {
                    "200": {
                        "description": "Success operation"
                    }
                }
            }
        },
        "/api/GetContentList": {
            "get": {
                "summary": "/api/GetContentList/get",
                "description": "Returns a list of content article summaries under the given category",
                "operationId": "api-GetContentList-get",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "query",
                        "description": "The identifier that uniquely identifies the category of content items being sought",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response will be an array of `ContentItem` objects.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KnowlegetArticleSummary"
                                    },
                                    "description": "GetContentList response 200 schema"
                                },
                                "example": [
                                    {
                                        "description": "A content item's description",
                                        "id": "KA-01234",
                                        "title": "A Content Item's Title"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api/Status/OEM": {
            "get": {
                "summary": "/api/Status/OEM",
                "description": "API to get OEM event currently active",
                "operationId": "api-status-oem",
                "responses": {
                    "200": {
                        "description": "null"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Category": {
                "required": [
                    "CategoryId",
                    "CategoryURL",
                    "Name",
                    "PicURL"
                ],
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "description": "Name of the category"
                    },
                    "Description": {
                        "type": "string",
                        "description": "Description of the category"
                    },
                    "CategoryId": {
                        "type": "string",
                        "description": "Unique ID for category"
                    },
                    "CategoryURL": {
                        "type": "string",
                        "description": "URL to category on 311 Online"
                    },
                    "PicURL": {
                        "type": "string",
                        "description": "URL of picture of the category"
                    },
                    "SubCategory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubCategory"
                        }
                    }
                },
                "example": {
                    "Name": "Category Name",
                    "Description": "This is a category's description.",
                    "CategoryId": "1",
                    "CategoryURL": "https://category-url/goes/here",
                    "PicURL": "https://image-url/goes/here",
                    "SubCategory": [
                        {
                            "Name": "Sub Category Name",
                            "Description": "This is a sub-category's description.",
                            "CategoryId": 2,
                            "CategoryURL": "https://sub-category-url/goes/here",
                            "ParentCategoryId": 1,
                            "SubCategory": [
                                {
                                    "Name": "Sub-sub Category Name",
                                    "Description": "This is a sub-sub category's description.",
                                    "CategoryId": 3,
                                    "CategoryURL": "https://sub-sub-category-url/goes/here",
                                    "ParentCategoryId": 2
                                }
                            ]
                        }
                    ]
                }
            },
            "SubCategory": {
                "required": [
                    "CategoryId",
                    "CategoryURL",
                    "Name",
                    "ParentCategoryId"
                ],
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string",
                        "description": "Name of 2nd level subcategory"
                    },
                    "Description": {
                        "type": "string",
                        "description": "Description of the subcategory"
                    },
                    "CategoryId": {
                        "type": "string",
                        "description": "Unique ID for subcategory"
                    },
                    "CategoryURL": {
                        "type": "string",
                        "description": "URL to subcategory on 311 Online"
                    },
                    "ParentCategoryId": {
                        "type": "string",
                        "description": "CategoryId of the parent"
                    },
                    "SubCategory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubCategory"
                        }
                    }
                },
                "example": {
                    "Name": "Sub-sub Category Name",
                    "Description": "This is a sub-sub category's description.",
                    "CategoryId": "3",
                    "CategoryURL": "https://sub-sub-category-url/goes/here",
                    "ParentCategoryId": "2"
                }
            },
            "KnowlegetArticleSummary": {
                "required": [
                    "kanumber",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "kanumber": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "example": {
                    "description": "A content item's description",
                    "id": "KA-01234",
                    "title": "A Content Item's Title"
                }
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "Ocp-Apim-Subscription-Key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "subscription-key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}